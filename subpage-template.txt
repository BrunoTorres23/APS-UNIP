    <!-- Resource Hints for Performance -->
    <link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin>
    <link rel="dns-prefetch" href="https://cdn.jsdelivr.net">

    <!-- Preload Critical Resources -->
    <link rel="preload" href="../js/modules/core.js" as="script" type="module">
    <link rel="preload" href="../js/modules/images.js" as="script" type="module">
    <link rel="preload" href="../images/pexels-christian-fohrer-894172-2912103.jpg" as="image">
    <link rel="preload" href="../images/istockphoto-1400218353-612x612.jpg" as="image">
    <link rel="preload" href="../images/istockphoto-1414916304-612x612.jpg" as="image">
    <link rel="preload" href="../images/direito-e-sustentabilidade.jpg" as="image">
    <link rel="preload" href="../images/pexels-pok-rie-33563-3829454.jpg" as="image">

    <!-- Bootstrap (loaded asynchronously) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" defer></script>

    <!-- Modern browsers: ES modules with code splitting -->
    <script type="module" src="../js/main.js"></script>

    <!-- Legacy browsers: Fallback bundle -->
    <script nomodule src="../js/bundle.js"></script>

    <!-- Service Worker Registration -->
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('../service-worker.js')
            .then(registration => {
              console.log('Service Worker registered with scope:', registration.scope);
            })
            .catch(error => {
              console.error('Service Worker registration failed:', error);
            });
        });
      }

      // Theme toggle functionality
      document.addEventListener('DOMContentLoaded', function() {
        const themeToggle = document.querySelector('.theme-toggle');
        if (themeToggle) {
          // Check for saved theme preference or use system preference
          const savedTheme = localStorage.getItem('theme');
          const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');

          // Set initial theme
          if (savedTheme) {
            document.documentElement.setAttribute('data-theme', savedTheme);
            updateThemeIcon(savedTheme, themeToggle);
          } else if (prefersDarkScheme.matches) {
            document.documentElement.setAttribute('data-theme', 'dark');
            updateThemeIcon('dark', themeToggle);
          } else {
            document.documentElement.setAttribute('data-theme', 'light');
            updateThemeIcon('light', themeToggle);
          }

          // Add click event listener
          themeToggle.addEventListener('click', function() {
            const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';

            document.documentElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateThemeIcon(newTheme, themeToggle);
          });
        }

        // Update theme icon based on current theme
        function updateThemeIcon(theme, button) {
          const icon = button.querySelector('i');
          if (icon) {
            if (theme === 'light') {
              icon.className = 'bi bi-moon';
              button.setAttribute('title', 'Mudar para tema escuro');
            } else {
              icon.className = 'bi bi-sun';
              button.setAttribute('title', 'Mudar para tema claro');
            }
          }
        }
      });
    </script>

    <!-- Theme Toggle Button -->
    <button class="theme-toggle" aria-label="Alternar tema" title="Alternar tema">
        <i class="bi bi-moon" aria-hidden="true"></i>
    </button>
